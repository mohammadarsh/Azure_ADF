{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-arsh"
		},
		"ls_arsh_storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_arsh_storage'"
		},
		"ls_arsh_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://blachatstorage.dfs.core.windows.net/"
		},
		"ls_get_data_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/lect_19_pipline_assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_r_lst",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item(),'r')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var _r_lst",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_r_lst",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "r_lst",
							"value": {
								"value": "@activity('act_r_lst').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "fil_m_lst",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item(),'m')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var_set_m_lst",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "fil_m_lst",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "m_lst",
							"value": {
								"value": "@activity('fil_m_lst').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "fil_other",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(not(startswith(item(),'m')),not(startswith(item(),'r')))\n\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "var_set_other",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "fil_other",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "other_lst",
							"value": {
								"value": "@activity('fil_other').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"input_lst": {
						"type": "array",
						"defaultValue": [
							"Ram",
							"patil",
							"manoj",
							"manish",
							"mohan",
							"kiran",
							"suresh"
						]
					}
				},
				"variables": {
					"r_lst": {
						"type": "Array"
					},
					"m_lst": {
						"type": "Array"
					},
					"other_lst": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_pipline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_append_id",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "append_id",
										"value": {
											"value": "@item().id",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_append_name",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "append_name",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "act_set_id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id",
							"value": {
								"value": "@variables('append_id')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name_lst",
							"value": {
								"value": "@variables('append_name')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"input_lst": {
						"type": "array",
						"defaultValue": [
							{
								"id": 1,
								"name": "Ram Patil"
							},
							{
								"id": 2,
								"name": "Shyam Patil"
							},
							{
								"id": 3,
								"name": "govind raina"
							}
						]
					}
				},
				"variables": {
					"id": {
						"type": "Array"
					},
					"name_lst": {
						"type": "Array"
					},
					"append_id": {
						"type": "Array"
					},
					"append_name": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_act_web_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipline_lect19_filter_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_filter_mum",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().city,'mumbai')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_filter_pune",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.input_lst",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().city,'pune')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_mumbai",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_filter_mum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "mum_lst",
							"value": {
								"value": "@activity('act_filter_mum').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_pune",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_filter_pune",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pune_lst",
							"value": {
								"value": "@activity('act_filter_pune').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"input_lst": {
						"type": "array",
						"defaultValue": [
							{
								"id": 1,
								"name": "aman",
								"city": "pune"
							},
							{
								"id": 2,
								"name": "zaid",
								"city": "mumbai"
							},
							{
								"id": 1,
								"name": "govig",
								"city": "pune"
							}
						]
					}
				},
				"variables": {
					"mum_lst": {
						"type": "Array"
					},
					"pune_lst": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_arsh_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_arsh_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_arsh_storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_get_data_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_get_data_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_act_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sparepart_data.csv",
						"folderPath": "input_data",
						"fileSystem": "adf-copy-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_sink_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales_target.csv",
						"folderPath": "target_loc",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_sink_data_wildcard')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "target_loc",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customer_merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cust_merge.csv",
						"folderPath": "target_loc",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customer_sink_genric')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir_loc": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().dir_loc",
							"type": "Expression"
						},
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "Enrollment Date",
						"type": "String"
					},
					{
						"name": "PAN Card",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_delete_act')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.csv",
						"fileSystem": "adf-copy-data"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dept')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": "input_data",
						"fileSystem": "adf-copy-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "department_id",
						"type": "String"
					},
					{
						"name": "department_name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dept_meta_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "source_data",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "department_id",
						"type": "String"
					},
					{
						"name": "department_name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "api_result",
						"fileSystem": "input-dataset"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_get_data_api",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relative_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_get_data_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_api_result')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "api_result",
						"fileSystem": "input-dataset"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales.csv",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_data_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_arsh_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": "source_data",
						"fileSystem": "input-dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_arsh_storage')]"
			]
		}
	]
}